#!/usr/bin/env php
<?php

use ArtARTs36\DocsRetriever\Config;
use ArtARTs36\DocsRetriever\Retriever;
use ArtARTs36\FileSystem\Local\LocalFileSystem;
use ArtARTs36\GitHandler\Factory\CachedGitFactory;
use ArtARTs36\GitHandler\Factory\LocalGitFactory;


$loaded = false;

if (isset($_composer_autoload_path)) {
    $loaded = true;

    require $_composer_autoload_path;
} else {
    foreach ([$_composer_autoload_path ?? '../../..', '../..', '..', 'vendor', '../vendor', '../../vendor'] as $path) {
        if (\is_file($autoload_file = __DIR__ . '/' . $path . '/autoload.php')) {
            require $autoload_file;
            $loaded = true;
            break;
        }
    }
}

if ($loaded === false) {
    fwrite(\STDERR, 'Composer autoload.php not found');

    exit(1);
}

$fs = new LocalFileSystem();

$logger = new \ArtARTs36\DocsRetriever\EchoLogger();

$retriever = new Retriever(
    new \ArtARTs36\DocsRetriever\Git\Creator(
        new CachedGitFactory(new LocalGitFactory()),
        $fs,
    ),
    new \ArtARTs36\DocsRetriever\Copier($fs, $logger),
    new \ArtARTs36\DocsRetriever\GitHosting\MergeRequestCreator(
        new \ArtARTs36\DocsRetriever\GitHosting\ClientFactory($logger),
        $logger,
    ),
    $logger,
);
$loader = new Config\Loader\YamlLoader();

$config = $loader->load(getcwd() . '/.docs-retriever.yaml');

$retriever->retrieve($config);
